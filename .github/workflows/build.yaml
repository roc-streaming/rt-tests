name: build

on:
  repository_dispatch:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  schedule:
    - cron: '0 0 * * 1'

jobs:
  ubuntu-systemwide-roc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install g++ pkg-config scons ragel gengetopt \
            libuv1-dev libunwind-dev libpulse-dev libsox-dev libcpputest-dev libspeexdsp-dev \
            libtool intltool autoconf automake make cmake

      - name: Build Roc
        run: |
          git clone https://github.com/roc-streaming/roc-toolkit.git /tmp/roc
          scons -C /tmp/roc -Q --build-3rdparty=openfec
          sudo scons -C /tmp/roc -Q --build-3rdparty=openfec install

      - name: Build tests
        run: |
          mkdir build && cd build
          cmake -DDOWNLOAD_ROC=OFF .. && make -j
          test -e ../bin/rt-tests

  ubuntu-roc-custom-path-roc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install g++ pkg-config scons ragel gengetopt \
            libuv1-dev libunwind-dev libpulse-dev libsox-dev libcpputest-dev libspeexdsp-dev \
            libtool intltool autoconf automake make cmake

      - name: Build Roc
        run: |
          git clone https://github.com/roc-streaming/roc-toolkit.git /tmp/roc
          scons -C /tmp/roc -Q --build-3rdparty=openfec --prefix=/tmp/roc/output
          sudo scons -C /tmp/roc -Q --build-3rdparty=openfec --prefix=/tmp/roc/output install

      - name: Build tests
        run: |
          mkdir build && cd build
          cmake -DDOWNLOAD_ROC=OFF \
           -DROC_INCLUDE_DIR=/tmp/roc/output/include \
           -DROC_LIB_DIR=/tmp/roc/output/lib .. && make -j
          test -e ../bin/rt-tests

  ubuntu-download-roc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install g++ pkg-config scons ragel gengetopt \
            libuv1-dev libunwind-dev libpulse-dev libsox-dev libcpputest-dev libspeexdsp-dev \
            libtool intltool autoconf automake make cmake

      - name: Build tests
        run: |
          mkdir build && cd build
          cmake .. && make -j
          test -e ../bin/rt-tests
